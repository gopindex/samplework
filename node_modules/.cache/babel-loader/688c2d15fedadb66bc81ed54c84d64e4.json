{"ast":null,"code":"var _jsxFileName = \"/home/gopindex/Github-cohort1/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport PropTypes from \"prop-types\";\nimport \"./css/Dashboard.css\";\nimport axios from \"axios\";\nimport Loading from \"../images/loading.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\"\n    };\n\n    this.handleSearch = async ev => {\n      // implementation of handleSearch using\n      // https://api.github.com/search/users?q=pranis\n      ev.preventDefault();\n\n      try {\n        this.props.setLoading(true);\n        const res = await axios.get(`https://api.github.com/search/users?q=${this.state.query}`);\n        this.props.handleUserSearch(res.data.items);\n        this.props.setLoading(false);\n      } catch {\n        console.log(\"Something went wrong\");\n      }\n    };\n  }\n\n  render() {\n    var _this$props$users;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchBar\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSearch,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.query,\n            onChange: ev => {\n              this.setState({\n                query: ev.target.value\n              });\n            },\n            type: \"text\",\n            className: \"search_input\",\n            placeholder: \"Enter a keyword to search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboardContainer\",\n        children: this.props.loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"loadingImage\",\n          src: Loading,\n          alt: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : (_this$props$users = this.props.users) === null || _this$props$users === void 0 ? void 0 : _this$props$users.map(user => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            avatar_url: user.avatar_url,\n            login: user.login,\n            github_link: user.html_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nDashboard.propTypes = {\n  users: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/home/gopindex/Github-cohort1/src/components/Dashboard.js"],"names":["React","Component","Card","PropTypes","axios","Loading","Dashboard","state","query","handleSearch","ev","preventDefault","props","setLoading","res","get","handleUserSearch","data","items","console","log","render","setState","target","value","loading","users","map","user","avatar_url","login","html_url","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AACA,eAAe,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC/CM,KAD+C,GACvC;AACNC,MAAAA,KAAK,EAAE;AADD,KADuC;;AAAA,SAK/CC,YAL+C,GAKhC,MAAOC,EAAP,IAAc;AAC3B;AACA;AACAA,MAAAA,EAAE,CAACC,cAAH;;AACA,UAAI;AACF,aAAKC,KAAL,CAAWC,UAAX,CAAsB,IAAtB;AACA,cAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CACf,yCAAwC,KAAKR,KAAL,CAAWC,KAAM,EAD1C,CAAlB;AAGA,aAAKI,KAAL,CAAWI,gBAAX,CAA4BF,GAAG,CAACG,IAAJ,CAASC,KAArC;AACA,aAAKN,KAAL,CAAWC,UAAX,CAAsB,KAAtB;AACD,OAPD,CAOE,MAAM;AACNM,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AACF,KAnB8C;AAAA;;AAoB/CC,EAAAA,MAAM,GAAG;AAAA;;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAE,KAAKZ,YAArB;AAAA,iCACE;AACE,YAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KADpB;AAEE,YAAA,QAAQ,EAAGE,EAAD,IAAQ;AAChB,mBAAKY,QAAL,CAAc;AAAEd,gBAAAA,KAAK,EAAEE,EAAE,CAACa,MAAH,CAAUC;AAAnB,eAAd;AACD,aAJH;AAKE,YAAA,IAAI,EAAC,MALP;AAME,YAAA,SAAS,EAAC,cANZ;AAOE,YAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAeE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACG,KAAKZ,KAAL,CAAWa,OAAX,gBACC;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,GAAG,EAAEpB,OAAnC;AAA4C,UAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADD,wBAGC,KAAKO,KAAL,CAAWc,KAHZ,sDAGC,kBAAkBC,GAAlB,CAAuBC,IAAD,IAAU;AAC9B,8BACE,QAAC,IAAD;AACE,YAAA,UAAU,EAAEA,IAAI,CAACC,UADnB;AAEE,YAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,YAAA,WAAW,EAAEF,IAAI,CAACG;AAHpB;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SARD;AAJJ;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA,oBADF;AAiCD;;AAtD8C;AAwDjDzB,SAAS,CAAC0B,SAAV,GAAsB;AAAEN,EAAAA,KAAK,EAAEvB,SAAS,CAAC8B,MAAV,CAAiBC;AAA1B,CAAtB","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport PropTypes from \"prop-types\";\nimport \"./css/Dashboard.css\";\nimport axios from \"axios\";\nimport Loading from \"../images/loading.gif\";\nexport default class Dashboard extends Component {\n  state = {\n    query: \"\",\n  };\n\n  handleSearch = async (ev) => {\n    // implementation of handleSearch using\n    // https://api.github.com/search/users?q=pranis\n    ev.preventDefault();\n    try {\n      this.props.setLoading(true);\n      const res = await axios.get(\n        `https://api.github.com/search/users?q=${this.state.query}`\n      );\n      this.props.handleUserSearch(res.data.items);\n      this.props.setLoading(false);\n    } catch {\n      console.log(\"Something went wrong\");\n    }\n  };\n  render() {\n    return (\n      <>\n        <h2>Dashboard</h2>\n        <div className=\"searchBar\">\n          <form onSubmit={this.handleSearch}>\n            <input\n              value={this.state.query}\n              onChange={(ev) => {\n                this.setState({ query: ev.target.value });\n              }}\n              type=\"text\"\n              className=\"search_input\"\n              placeholder=\"Enter a keyword to search...\"\n            ></input>\n          </form>\n        </div>\n        <div className=\"dashboardContainer\">\n          {this.props.loading ? (\n            <img className=\"loadingImage\" src={Loading} alt=\"Loading\" />\n          ) : (\n            this.props.users?.map((user) => {\n              return (\n                <Card\n                  avatar_url={user.avatar_url}\n                  login={user.login}\n                  github_link={user.html_url}\n                />\n              );\n            })\n          )}\n        </div>\n      </>\n    );\n  }\n}\nDashboard.propTypes = { users: PropTypes.object.isRequired };\n"]},"metadata":{},"sourceType":"module"}